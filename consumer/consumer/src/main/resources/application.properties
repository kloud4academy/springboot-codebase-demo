spring.application.name=consumer
server.port=8081

spring.cloud.kubernetes.discovery.include-external-name-services=true
spring.cloud.kubernetes.discovery.all-namespaces=true
spring.cloud.kubernetes.discovery.include-not-ready-addresses=true

management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=100
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=10
resilience4j.circuitbreaker.configs.default.slidingWindowType=TIME_BASED
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=10
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=50s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10
resilience4j.retry.configs.default.maxAttempts=3
resilience4j.retry.configs.default.waitDuration=10s
resilience4j.retry.configs.default.enableExponentialBackoff=true
resilience4j.retry.configs.default.retryExceptions=java.io.IOException,org.springframework.web.client.HttpServerErrorException
#resilience4j.retry.configs.default.ignoreExceptions=io.github.robwin.exception.BusinessException
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.retry.configs.default.registerHealthIndicator=true
